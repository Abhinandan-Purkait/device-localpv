

##############################################
###########                       ############
###########   StorageCohort CRD   ############
###########                       ############
##############################################

# StorageCohort CRD is autogenerated via `make manifests` command.
# Do the modification in the code and run the `make manifests` command
# to generate the CRD definition

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: storagecohorts.scp.openebs.io
spec:
  group: scp.openebs.io
  names:
    kind: StorageCohort
    listKind: StorageCohortList
    plural: storagecohorts
    singular: storagecohort
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            description: Standard object's metadata.
            type: object
          spec:
            description: Spec defines the behavior of a cohort.
            properties:
              cohortManager:
                additionalProperties:
                  type: string
                description: CohortManager stores all the details about the cohort
                  manager responsible for managing the cohort
                type: object
              defaultStorageProvisioner:
                description: 'DefaultStorageProvisioner is the default provisioner
                  for the cohort which can be used for provisioning pools or volumes
                  when no provisioner is specified in the storage pool For example:
                  "openebs.io/scp-lvm-provisioner" or "openebs.io/scp-device-provisioner".'
                type: string
              nodeSelector:
                description: NodeSelector is used to specify the cohort to be considered
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            required:
            - nodeSelector
            type: object
          status:
            description: Most recently observed status of the cohort. Populated by
              the cohort operator or cohort manager.
            properties:
              capabilities:
                description: Capabilities represent capabilities that a cohort consists
                  of
                properties:
                  IOConnectivity:
                    description: IOConnectivity describes capabilities to support
                      various IO Connectivity options i.e accessProtocols
                    properties:
                      accessProtocols:
                        description: AccessProtocols to be supported, viz NVMe, NVMeOverFabrics,
                          iSCSI
                        items:
                          description: AccessProtocol supported, viz NVMe, NVMeOverFabrics,
                            iSCSI
                          type: string
                        type: array
                    required:
                    - accessProtocols
                    type: object
                  IOPerformance:
                    description: IOPerformance describe the capabilities to support
                      various IO performance options.
                    properties:
                      averageIOOperationLatencyMicroseconds:
                        description: AverageIOOperationLatencyMicroseconds to be supported
                          or not.
                        format: int64
                        type: integer
                      maxIOPSPerTB:
                        description: maxIOOperationsPerSecondPerTerabyte to be supported
                          or not.
                        format: int64
                        type: integer
                      storageTier:
                        description: StorageTier is a classification of the service
                          based on several factors like performance, redundancy, availability,
                          etc. that can be used for pool or volume creation, viz Platinum,
                          Gold, Silver)
                        type: string
                    required:
                    - storageTier
                    type: object
                  dataProtection:
                    description: DataProtection describes data protection capabilities.
                    type: object
                  dataSecurity:
                    description: DataSecurity specifies security standards that is
                      supported.
                    properties:
                      dataSanitizationPolicy:
                        description: DataSanitizationPolicy to be supported, viz Clear,
                          CryptographicErase
                        items:
                          description: DataSanitizationPolicy specify the data sanitization
                            policy, viz None, Clear, CryptographicErase
                          type: string
                        type: array
                      mediaEncryption:
                        description: MediaEncryption to be supported or not, if yes
                          the algorithms
                        items:
                          type: string
                        type: array
                    type: object
                  dataStorage:
                    description: DataStorage specifies accessModes, provisioning,
                      multiPathing, compression and deduplication characteristics
                      supported by a pool or a volume.
                    properties:
                      accessModes:
                        description: AccessModes contains the actual access modes,
                          viz ReadWriteOnce, ReadOnlyMany, ReadWriteMany
                        items:
                          description: AccessMode of the pool or volume, viz ReadWriteOnce,
                            ReadOnlyMany and ReadWriteMany
                          type: string
                        type: array
                      compression:
                        description: Compression to be supported or not, if yes the
                          algorithm
                        items:
                          type: string
                        type: array
                      deduplication:
                        description: Deduplication to be supported or not.
                        type: boolean
                      multiPathing:
                        description: MultiPathing to be supported or not.
                        items:
                          description: MultiPathing specifies fault toleration type,
                            viz None, OnlineActive, OnlinePassive
                          type: string
                        type: array
                      provisioningPolicy:
                        description: ProvisioningPolicy defines provisioning policy
                          type, viz thick, thin
                        items:
                          description: ProvisioningPolicy specifies provisioning type,
                            viz thick, thin
                          type: string
                        type: array
                    required:
                    - accessModes
                    type: object
                required:
                - IOConnectivity
                - IOPerformance
                - dataStorage
                type: object
              components:
                description: Components contains information about different component's
                  conditions which the cohort is comprised of. The components can
                  be cohort, cohort-manager, node agents or any other component that
                  a cohort may contain.
                properties:
                  cohortCondition:
                    description: CohortCondition is an array of current observed cohort
                      conditions. The Cohort is deemed to be fully functional when
                      its Ready and Schedulable condition types are `true`. All other
                      types status declares a cohort to be non-functional.
                    items:
                      description: CohortCondition contains condition information
                        for a storage cohort.
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: The last time this condition was updated.
                          format: date-time
                          type: string
                        message:
                          description: A human readable message indicating details
                            about the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of cohort condition.
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  cohortManagerCondition:
                    description: CohortManagerCondition is an array of current observed
                      cohort manager conditions.
                    items:
                      description: ComponentCondition contains condition information
                        for a cohort's individual component.
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: The last time this condition was updated.
                          format: date-time
                          type: string
                        message:
                          description: A human readable message indicating details
                            about the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of component condition.
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  nodeConditions:
                    description: NodeConditions is an array of current observed cohort's
                      individual nodes conditions.
                    items:
                      description: CohortNodeCondition contains the latest status
                        information for some or all the nodes that the cohort is comprised
                        of.
                      properties:
                        condition:
                          description: Condition is an array of current observed node
                            conditions.
                          items:
                            description: ComponentCondition contains condition information
                              for a cohort's individual component.
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned
                                  from one status to another.
                                format: date-time
                                type: string
                              lastUpdateTime:
                                description: The last time this condition was updated.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details
                                  about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                type: string
                              type:
                                description: Type of component condition.
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        nodeName:
                          description: 'Name of the node. This must be a DNS_LABEL.
                            For example: "virtual-node-1"'
                          type: string
                      required:
                      - nodeName
                      type: object
                    type: array
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
