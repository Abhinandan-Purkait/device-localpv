
##############################################
###########                       ############
###########   StoragePool CRD     ############
###########                       ############
##############################################
# StoragePool CRD is autogenerated via `make manifests` command.
# Do the modification in the code and run the `make manifests` command
# to generate the CRD definition

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: storagepools.scp.openebs.io
spec:
  group: scp.openebs.io
  names:
    kind: StoragePool
    listKind: StoragePoolList
    plural: storagepools
    shortNames:
    - sp
    singular: storagepool
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StoragePool describes a Storage Pool resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specifications and configurations to be consumed
              by the provisioner for a StoragePool resource
            properties:
              capabilities:
                description: Capabilities to be supported by the StoragePool
                properties:
                  IOConnectivity:
                    description: IOConnectivity describes capabilities to support
                      various IO Connectivity options i.e accessProtocols
                    properties:
                      accessProtocols:
                        description: AccessProtocols to be supported, viz NVMe, NVMeOverFabrics,
                          iSCSI
                        items:
                          description: AccessProtocol supported, viz NVMe, NVMeOverFabrics,
                            iSCSI
                          type: string
                        type: array
                    required:
                    - accessProtocols
                    type: object
                  IOPerformance:
                    description: IOPerformance describe the capabilities to support
                      various IO performance options.
                    properties:
                      averageIOOperationLatencyMicroseconds:
                        description: AverageIOOperationLatencyMicroseconds to be supported
                          or not.
                        format: int64
                        type: integer
                      maxIOPSPerTB:
                        description: maxIOOperationsPerSecondPerTerabyte to be supported
                          or not.
                        format: int64
                        type: integer
                      storageTier:
                        description: StorageTier is a classification of the service
                          based on several factors like performance, redundancy, availability,
                          etc. that can be used for pool or volume creation, viz Platinum,
                          Gold, Silver)
                        type: string
                    required:
                    - storageTier
                    type: object
                  dataProtection:
                    description: DataProtection describes data protection capabilities.
                    type: object
                  dataSecurity:
                    description: DataSecurity specifies security standards that is
                      supported.
                    properties:
                      dataSanitizationPolicy:
                        description: DataSanitizationPolicy to be supported, viz Clear,
                          CryptographicErase
                        items:
                          description: DataSanitizationPolicy specify the data sanitization
                            policy, viz None, Clear, CryptographicErase
                          type: string
                        type: array
                      mediaEncryption:
                        description: MediaEncryption to be supported or not, if yes
                          the algorithms
                        items:
                          type: string
                        type: array
                    type: object
                  dataStorage:
                    description: DataStorage specifies accessModes, provisioning,
                      multiPathing, compression and deduplication characteristics
                      supported by a pool or a volume.
                    properties:
                      accessModes:
                        description: AccessModes contains the actual access modes,
                          viz ReadWriteOnce, ReadOnlyMany, ReadWriteMany
                        items:
                          description: AccessMode of the pool or volume, viz ReadWriteOnce,
                            ReadOnlyMany and ReadWriteMany
                          type: string
                        type: array
                      compression:
                        description: Compression to be supported or not, if yes the
                          algorithm
                        items:
                          type: string
                        type: array
                      deduplication:
                        description: Deduplication to be supported or not.
                        type: boolean
                      multiPathing:
                        description: MultiPathing to be supported or not.
                        items:
                          description: MultiPathing specifies fault toleration type,
                            viz None, OnlineActive, OnlinePassive
                          type: string
                        type: array
                      provisioningPolicy:
                        description: ProvisioningPolicy defines provisioning policy
                          type, viz thick, thin
                        items:
                          description: ProvisioningPolicy specifies provisioning type,
                            viz thick, thin
                          type: string
                        type: array
                    required:
                    - accessModes
                    type: object
                required:
                - IOConnectivity
                - IOPerformance
                - dataStorage
                type: object
              configuration:
                description: Configuration points to the configuration, a custom resource,
                  map of parameters or configmap that can be used to specify the pool
                  and its device related configuration.
                properties:
                  parameters:
                    additionalProperties:
                      type: string
                    description: 'Parameters are used to define all the properties
                      or configurations of a pool. Note: This should be empty if the
                      below Reference field is used to define the pool configurations.'
                    type: object
                  reference:
                    description: 'Reference can point to either a custom resource
                      or configmap containing all the configuration required for the
                      pool. Note: This should be empty if the above Parameters field
                      is used to define the pool configurations.'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                type: object
              requestedCapacity:
                anyOf:
                - type: integer
                - type: string
                description: RequestedCapacity needed for the pool creation
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              storageCohortReference:
                description: StorageCohortReference points to the StorageCohort resource,
                  the pool is to be created upon
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              storageProvisioner:
                description: StorageProvisioner refers to the pool provisioner which
                  will be responsible for creating and managing the pool
                type: string
            required:
            - configuration
            - storageCohortReference
            type: object
          status:
            description: Status is for handling status of StoragePool resource
            properties:
              IOPs:
                description: IOPs of the pool,viz total, provisioned, used and available
                  IOPs
                properties:
                  available:
                    description: Available IOPs of the pool
                    format: int64
                    type: integer
                  provisioned:
                    description: Provisioned IOPs of the pool
                    format: int64
                    type: integer
                  total:
                    description: Total IOPs of the pool
                    format: int64
                    type: integer
                  used:
                    description: Used IOPs of the pool
                    format: int64
                    type: integer
                type: object
              capacity:
                description: Capacity of the pool,viz total, used and available capacity
                properties:
                  available:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Available Capacity of the pool
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  provisioned:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Provisioned Capacity of the pool
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  total:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Total Capacity of the pool
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  used:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Used Capacity of the pool
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              referenceResource:
                description: ReferenceResource points to the pre-existing pool resource
                  or the created pool resource after creation of pool.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              state:
                description: Conditions enlist the conditions of the pool based on
                  various types.
                items:
                  description: StoragePoolCondition describes the condition of a StoragePool
                    at a certain point based on a specific type
                  properties:
                    condition:
                      description: Condition represents the storage pool's current
                        observed condition for the above type
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: The last time this condition was updated.
                          format: date-time
                          type: string
                        message:
                          description: A human readable message indicating details
                            about the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                      required:
                      - status
                      type: object
                    type:
                      description: Type of StoragePool condition.
                      type: string
                  required:
                  - condition
                  type: object
                type: array
              volumeSizeMaxLimit:
                anyOf:
                - type: integer
                - type: string
                description: VolumeSizeMaxLimit for maximum volume size allowed
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
